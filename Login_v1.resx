<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAABFxJREFUWEfF
        Vmts21QU7mCbeAlNGwy28hACifFoHJqJglqpAyEhfkGHMpw2iyqYoqmr7ZRFTJtaVvgBQxP8QSChCQq/
        oBFLbGfrYJoUoVY8qsCgZB2lbWLHWTboI6/yio0v5yYXGhqLNbElPumToyTnfN8995zr27AaeN+JrmNC
        yTsZMeliRek9VpDHWV7+jBXlVxlefmxvcGYz+av1OByIrWfE1EOMII2AMDJgBky90RdWGkmIdRhE6Ao2
        mLyf4aXPDYSXycsFqMaxwXD6GhJqDXyhxAYQeKFK0JBJuVeUniCh1gAS3gHJR6vFjCjlYZveJqFWAK2B
        CtghebFazJA6I8hfOwPoSpLAHAYjkbW9ocQOA6H/4rnnAspGksIc/ncDuJQ+4UIrNJdmIFRNUdY5QZ5g
        RhauJynMozec2AYjphgKVvMPMHGShFoDf/DSZkZIvmkgVk1Rvgj0klBrUDoF4aiFKswbii5ThQkY6xXm
        tpJQ69D3ibIR5rsfRFKwwt9WCP+J5x+e45yoPE1CrEdP5OfrWDG+C4R44CxUJA3PFMfLEywvvYXfFeSv
        1gNPw75gatPewFQjJ8Rv8gkzrVw45eGElBM3aalCI9M34vcAfmuSMPPwRtG6fcfjt3O80gKrfQVK/SE0
        5H6fKD2KhX0npHtgS9oYUX4JRvV1jo97GFFp3x9O32DOCEJr/J9eupYNym0gfBpm+yd4Vu57ERrugsH3
        mPPQtEew6fpMgHgfnGRMKNENIjEDgdWwCCa+wtWp2QReORY3SFoPZ2uqxGAErcUBJlZeSXx8XwQOr/q6
        hq9UrJgcrkhSD3XgEpQ/Cs+D0LiPkPSXAew9G5IdFYnqoQ7CC5yYHBr46Btqzu3YknM337XobGrKO213
        LzodtyHnw1cTxX+jeyhxFcsrHQZJa2HpXoic967P0baWjMv+fta9/ftcl6OYpSkJeCrT1dyR73hwE5Fd
        RukwKc2zYeLVUAWOHn53bCsWz9FULOdp0QsvetRCv1uHzyhH21UwNL1I2w9VVaLnZOJm7H5F0lqYxtMz
        76Qas7R9OOuyo/zzTyJ16lukxSfRL0dZhE3Ab2q203E210k9TqTL6OFnboUk+Jw3Sn5ZwuRMHwicb8Kr
        h1KjbJcDFQ7SqBiNIP3XwgoT1FLOZf+ASJdh1gC+CZ31dW/I0NSzJQN/mxjYjbTZGEKairQfv0OFQ52w
        FRT0hO0MkS7DrAEYt6mjx07ZMs/YPP8YcG9HSy/vQZoyg5BaROq5cVTw78S/aWBilEiXYd5AUvEHp+iM
        64F22Of5cg88hTTph5XimHN52uYn0mWYN4BvTNLApHfnlkWaOoJHD7ofqZNRXZ34Qq8QV4FfLrio+4h0
        Gczx6VvgYvGxQeJaOHsgEGtL725tgxKPZTub5/LeHb/n97RrIKoDl7B41kXtIrLLwBcOvAJIcr5e4kbE
        p+BrcBbkXY5t0JD9IDYBDTcJzyiYGqpaeUNDw18B8arUhKc+8gAAAABJRU5ErkJggg==
</value>
  </data>
</root>